<!DOCTYPE html>
<html>

<head>
  <meta charset=utf-8>
  <meta name="author" content="Andrew Sernyak">
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Аргументи й інтерфейс :: ndrw ze destruktor</title>
  <link rel='stylesheet' href='../style.css' />
  <link rel="alternate" type="application/rss+xml" title="RSS" href="../atom.xml" />
  <link rel="image_src" href="../../logo.png" />
  <!-- GOOGL ANAL --> 
  <script>
     var _gaq = [['_setAccount', 'UA-18813210-3'], ['_trackPageview']];
     (function(d, t) {
      var g = d.createElement(t),
          s = d.getElementsByTagName(t)[0];
      g.async = true;
      g.src = '//www.google-analytics.com/ga.js';
      s.parentNode.insertBefore(g, s);
     })(document, 'script');
  </script>
</head>

<body>
<nav>
  <section>
    <ul>
      <li style="float: left;"><a href="../index.htm">Back</a>
      <li><a href="../atom.xml">RSS</a></li>
    </ul>
  </section>
</nav>
<header><pre>
                   /\\\                                          
                   \/\\\                                         
                    \/\\\                                        
 /\\/\\\\\\          \/\\\   /\\/\\\\\\\   /\\    /\\   /\\      
 \/\\\////\\\    /\\\\\\\\\  \/\\\/////\\\ \/\\\  /\\\\ /\\\     
  \/\\\  \//\\\  /\\\////\\\  \/\\\   \///  \//\\\/\\\\\/\\\     
   \/\\\   \/\\\ \/\\\  \/\\\  \/\\\          \//\\\\\/\\\\\     
    \/\\\   \/\\\ \//\\\\\\\/\\ \/\\\           \//\\\\//\\\     
     \///    \///   \///////\//  \///             \///  \///     

</pre>
</header>
<ul>
   
    </li><article>
  
<h1>Параметри</h1>

<p>Колись, коли я ще писав на Жаві фул-тайм, передавати у функцію купу параметрів було, в принципі, норм: IDE робила за тебе перевірку типів через, що автокомпліт-кодінг рулив. Потім коли я почав писати на Js — такий підхід вже себе не виправдовує себе: нема перевірки на аргументи і передавати параметри зручніше простим об&rsquo;єктом, типу</p>

<pre><code>var foo = funcion(cfg) { .. };
</code></pre>

<p>З пехапе, вже стає цікаво: є перевірка аргументів, але є параметри за замовчуванням, через які виникає нестримне бажання загавнити й додати до списку аргументів якусь єресь а-ля</p>

<pre><code>function foo($bar, $baz, $buz = null)
</code></pre>

<p>що з часом переростає у функцію з 10ма параметрами, половина з яких null чи &ldquo;. Як не мене, їх взагалі треба заборонити, але ж, як всі знають, що пехапе <a href="http://me.veekun.com/blog/2012/04/09/php-a-fractal-of-bad-design/">фрактал поганого дизайну</a> і врятує його тільки смерть в геєні огненій)</p>

<p>Стає ясно, що тут треба підключати інкапсуляцію і обгортати ці параметри в щось з вмєняємим інтерфейсом, що не залежить від параметрів — record(якщо в мові є таке) чи мапу(якщо не треба валідацій), чи навіть dto-клас(хелоу жавісти). Ну чи взагалі винести частину параметрів всередину класу й передавати їх через конструктор. А якщо ще в цьому класі не плодити мютебл стейт — так взагалі гарно.</p>

<p>Але зараз ми говоримо не про це. А про —</p>

<h1>Інтерфейс</h1>

<p>аргументи функцій, вони ж не самі по собі, їх придумали щоб вирішувати задачі(як і класи). Тому аргументи функцій — це якраз і є інтерфейс через який задача буде вирішуватись. А інтерфейс — це завжди перепона на шляху вирішення проблеми, тому над інтерфейсом треба думати найбільше, але зазвичай не думають, а нафігашують параметрів, петернів чи ще якоїсь єресі.
Проблему погіршує ще те, що придумати хороший, гідний інтерфейс — це скіл яким наділено далеко не всіх.
Тут на допомогу має прийти простота, але простота — дуже непроста штука, звиняйте за оксюморон.
Хороша функція(метод) — функція яка вирішує задачу з мінімум переданих аргументів і яка не залежить від чогось ззовні; а ідеальна функція — функція, яку можна взагалі викинути й без неї можна вирішити задачу.</p>

<p>Тому не плодіть єресі, бо кожен раз коли додаєте чи розширюєте якийсь інтерфейс — вмирає кошеннятко.</p>


    </article></li>
</ul>  

<div id="mc-container"></div>
<script type="text/javascript">
var mcSite = '11384';
(function() {
    var mc = document.createElement('script');
    mc.type = 'text/javascript';
    mc.async = true;
    mc.src = 'http://cackle.me/mc.widget-min.js';
    (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(mc);
})();
</script>
<a href="http://cackle.me" id="mc-link"><b style="color:#4FA3DA">CACKL</b><b style="color:#F65077">E</b> comment system</a>

<footer>
  <section>&copy; <b>A. Sernyak</b> — all rights reserved. 2012-2013</section>
  <section></section>
</footer>

</body>
</html>